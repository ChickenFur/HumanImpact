// Generated by CoffeeScript 1.4.0
(function() {
  var birthDatePropTag, birthDateTag, birthYearTag, isPersonTag, models, rdfSyntaxTag, resourceURL, _validateBirth, _validatePerson;

  models = require('./models');

  resourceURL = "http://dbpedia.org/resource/";

  rdfSyntaxTag = "http://www.w3.org/1999/02/22-rdf-syntax-ns#type";

  isPersonTag = "http://dbpedia.org/ontology/Person";

  birthDateTag = "http://dbpedia.org/ontology/birthDate";

  birthDatePropTag = "http://dbpedia.org/property/birthDate";

  birthYearTag = "http://dbpedia.org/ontology/birthYear";

  exports.parse = function(data, wikipage) {
    var newPerson, results;
    data = JSON.parse(data);
    results = _validatePerson(data, wikipage);
    console.log(results.message);
    _validateBirth(data, wikipage);
    if (results.validData) {
      newPerson = models.makePerson(wikipage, _validateBirth(data, wikipage).year, "http://en.wikipedia.org/" + wikipage);
      newPerson.data = data;
      return newPerson;
    } else {
      results.data = data;
      return results;
    }
  };

  _validatePerson = function(data, wikipage) {
    var person, results;
    results = {
      validData: true,
      message: ""
    };
    if (!data["" + resourceURL + wikipage]) {
      results.validData = false;
      results.message = "resource URL Bad";
      return results;
    }
    if (!data["" + resourceURL + wikipage][rdfSyntaxTag]) {
      results.validData = false;
      results.message = "rdf Syntax Bad";
      return results;
    }
    if (!data["" + resourceURL + wikipage][rdfSyntaxTag][0]) {
      results.validData = false;
      results.message = "rdf Syntax Array Bad";
      return results;
    }
    if (!data["" + resourceURL + wikipage][rdfSyntaxTag][0].value) {
      results.validData = false;
      results.message = "rdf Syntax Array Value is Bad";
      person = data["" + resourceURL + wikipage][rdfSyntaxTag][0].value;
      if (person !== isPersonTag) {
        results.validData = false;
        results.message = "rdf Syntax Array Value is: " + person;
      }
      return results;
    }
    return results;
  };

  _validateBirth = function(data, wikipage) {
    var results;
    results = {
      validBirth: true,
      year: null,
      message: ""
    };
    console.log(results);
    try {
      results.year = data["" + resourceURL + wikipage][birthDateTag][0].value;
      results.message = "birthDateTag worked";
    } catch (err) {
      try {
        results.year = data["" + resourceURL + wikipage][birthYearTag][0].value;
        results.message = "birthYearTag worked";
      } catch (err) {
        try {
          results.year = data["" + resourceURL + wikipage][birthDatePropTag][0].value;
          results.message = "birthYearPropTag worked";
        } catch (err) {
          results.validBirth = false;
        }
      }
    }
    console.log("I got to the " + results.message);
    return results;
  };

}).call(this);
